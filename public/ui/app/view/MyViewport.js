/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 3.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ui.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    requires: [
        'Ext.container.Container',
        'Ext.button.Button'
    ],

    layout: 'fit',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'container',
                    layout: {
                        type: 'hbox',
                        align: 'middle',
                        pack: 'center'
                    },
                    items: [
                        {
                            xtype: 'container',
                            flex: 1,
                            layout: {
                                type: 'vbox',
                                align: 'center',
                                pack: 'center'
                            },
                            items: [
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    minHeight: 100,
                                    width: 150,
                                    text: 'Restart MIST with Logs',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                },
                                {
                                    xtype: 'button',
                                    flex: 1,
                                    minHeight: 100,
                                    width: 150,
                                    text: 'Fast MIST restart',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick1,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, eOpts) {
        Ext.Ajax.request({
            method: 'GET',
            url: '../rest/mistRestart',
            success: function() {
                Ext.MessageBox.alert('Restart','Restart is initiated! Please wait couple of minutes!');
            },
            failure: function() {
                Ext.MessageBox.alert('Restart','Error! No restart has happened!');
            }
        });
    },

    onButtonClick1: function(button, e, eOpts) {
        Ext.Ajax.request({
            method: 'GET',
            url: '../rest/mistRestartFast',
            success: function() {
                Ext.MessageBox.alert('Restart','Restart is initiated! Please wait couple of minutes!');
            },
            failure: function() {
                Ext.MessageBox.alert('Restart','Error! No restart has happened!');
            }
        });
    }

});